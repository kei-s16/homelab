---
- name: 'kubernetesグループを作成する'
  become: true
  ansible.builtin.group:
    name: kubernetes
    state: present

- name: 'kubernetes用のユーザを作成する'
  become: true
  ansible.builtin.user:
    name: kube
    shell: /usr/bin/zsh
    groups: kubernetes, sudo
    append: yes
    password: "{{ vault_maintainer_password | password_hash('sha512') }}"

- name: '監視に必要なパッケージを追加する'
  become: true
  community.general.pacman:
    name: '{{ item.name }}'
    state: installed
  with_items: '{{ monitoring_packages  }}'

- name: 'prometheusの設定を置く'
  become: true
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml

- name: 'prometheus.serviceを有効化'
  become: true
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: prometheus

- name: 'prometheus-node-exporter.serviceを有効化'
  become: true
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: prometheus-node-exporter

- name: 'prometheus.serviceのリロード'
  become: true
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: prometheus

- name: 'prometheus-node-exporter.serviceのリロード'
  become: true
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: prometheus-node-exporter

- name: 'kubernetesに必要なパッケージを追加する'
  become: true
  community.general.pacman:
    name: '{{ item.name }}'
    state: installed
  with_items: '{{ kubernetes_packages  }}'
  when: "not 'kubernetes-proxy' in group_names"

- name: 'masterに必要なパッケージを追加する'
  become: true
  community.general.pacman:
    name: '{{ item.name }}'
    state: installed
  with_items: '{{ kubernetes_master_packages  }}'
  when: "'kubernetes-master' in group_names"

- name: 'proxyに必要なパッケージを追加する'
  become: true
  community.general.pacman:
    name: '{{ item.name }}'
    state: installed
  with_items: '{{ kubernetes_proxy_packages  }}'
  when: "'kubernetes-proxy' in group_names"

- name: '/etc/hostsを置く'
  become: true
  ansible.builtin.template:
    src: etc-hosts.j2
    dest: /etc/hosts
  vars:
    item: '{{ servers }}'

- name: 'nginx.confを置く'
  become: true
  ansible.builtin.template:
    src: nginx-conf.j2
    dest: /etc/nginx/nginx.conf
  vars:
    item: '{{ master_servers }}'
  when: "'kubernetes-proxy' in group_names"

- name: 'nginx.serviceを有効化'
  become: true
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: nginx
  when: "'kubernetes-proxy' in group_names"

- name: 'br_netfilterを有効化'
  become: true
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: 'sysctlの設定を置く'
  become: true
  ansible.builtin.copy:
    src: 99-sysctl.conf
    dest: /etc/sysctl.d/99-sysctl.conf

- name: 'containerd.serviceを有効化'
  become: true
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: containerd
  when: "not 'kubernetes-proxy' in group_names"

- name: 'kubelet.serviceを有効化'
  become: true
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: kubelet
  when: "not 'kubernetes-proxy' in group_names"
